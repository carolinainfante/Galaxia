/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import clases.Planeta;
import clases.GrafoPlaneta;
import clases.Nave;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import utils.CargadorImagen;

/**
 *
 * @author Carolina
 */
public class SistemaPlanetarioPanel extends javax.swing.JPanel implements Runnable {

    /**
     * Creates new form SistemaPlanetarioPanel
     */
    int x,
            /**
             * Creates new form SistemaPlanetarioPanel
             */
            y;
    int i = 0;

    public GrafoPlaneta grafoPlaneta;
    List<Planeta> planetas; //Lista que almace las nebulosas que se van creando de objeto Nebulosas
    Planeta planeta; //declaraci√≥n de objeto nebulosa
//    int x1 = (int) (Math.random() * 1000);

//    int y1 = (int) (Math.random() * 600);
    int x1;
    int y1;
    Thread hilo;
    Nave nave;

    //private Comunicacion comunicacion;
    public SistemaPlanetarioPanel() {
        initComponents();
        grafoPlaneta = new GrafoPlaneta();
        hilo = new Thread(this);
        nave = new Nave(0, 0);
        

        // Polimorfismo del panel abstraido sobre la interface Comunicacion
        // comunicacion = (Comunicacion) this.getParent();
    }
    //fondo ventana planeta

    @Override
    public void paint(Graphics g) {

        g.drawImage(CargadorImagen.obtenerImagen("src\\Imagenes\\fondoplaneta.png"), 0, 0, 1024, 700, this);
        g.drawImage(CargadorImagen.obtenerImagen("src\\Imagenes\\infinity.png"), nave.getX(), nave.getY(), 104, 70, this);
//        g.drawImage(new ImageIcon("src\\Imagenes\\fondoplaneta.png").getImage(), 0, 0, 1024, 700,null);//

        System.out.println("cantidad de planetas " + grafoPlaneta.getTotalPlanetas());

        for (int j = 0; j < grafoPlaneta.getTotalPlanetas(); j++) {
           Planeta planeta = grafoPlaneta.getListaPlanetas().get(j);
//            y = grafoPlaneta.getListaPlanetas().get(j).getY();
//            i = grafoPlaneta.getListaPlanetas().get(j).getI();

            g.drawImage(CargadorImagen.obtenerImagen("src\\Imagenes\\planeta.png"), 
                    planeta.getX(), planeta.getY(), 50, 50, null);

        }
        
    }

    public void inicio() {
        hilo.start();

    }

    public void pintarPlaneta(Planeta planeta) {
        Graphics g = getGraphics();
        //Execption para poder leer una imagen
        BufferedImage imgPlanet = CargadorImagen.obtenerImagen("src\\Imagenes\\planeta.png");

        g.drawImage(imgPlanet, planeta.getX(), planeta.getY(), 50, 50, this);
        System.out.println("esto no quiere funcioonar");
        //repaint();
    }

//    public void recorrerListaPlanetas(){
//       
//        for ( Planeta listaPlaneta: grafoPlaneta) {
//            
//        
//           System.out.println("uuuuuu");
//           int x1=grafoPlaneta.getListaPlanetas().getX();
//           System.out.println(x1);
//           int  y1=grafoPlaneta.getListaPlanetas().getY();
//           System.out.println(y1);
//           System.out.println("grafo"+x1+ y1);
//           
//          
//       }
//    }
//    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:

        //pinta el planeta
        if (!evt.isMetaDown()) {
            x = evt.getX();
            y = evt.getY();
            Planeta planeta = new Planeta(x, y, i);
            pintarPlaneta(planeta);
            grafoPlaneta.adicionarPlaneta(planeta);
            i++;

            grafoPlaneta.imprimirGrafo();

            NebulosaPanel.agregarPlaneta(grafoPlaneta.getListaPlanetas());
            System.out.println("la lista de planetas es" + grafoPlaneta.getTotalPlanetas());
            //comunicacion.transferirListaPlanetas(grafoPlaneta.getGplanetas());
        }
    }//GEN-LAST:event_formMouseClicked

    @Override
    public void run() {

        try {
            System.out.println("hola");
           planeta =  grafoPlaneta.listaPlanetas.get(0);
         nave.setX(planeta.getX());
          nave.setY(planeta.getY());
          
//           Thread.sleep(1500);
//                    nave.setX((int) (Math.random() * 100));
//                   nave.setY((int) (Math.random() * 100));
//                    repaint();
           
//            while (true) {
//                while (nave.getX() < 1000 - 120 & nave.getY() < 550 - 90) {
//                    Thread.sleep(1500);
//                    nave.setX((int) (Math.random() * 100));
//                   nave.setY((int) (Math.random() * 100));
//                    repaint();
//                }
//                while (nave.getX() > 4 & nave.getY() > 100) {
//                    Thread.sleep(1500);
//                   nave.setX((int) (Math.random() * 100)*(-1));
//                   nave.setY((int) (Math.random() * 100)*(-1));
//                    repaint();
//                }
//
//            }
        } catch (Exception ex) {
            System.out.println("sucedio un error" + ex.getMessage());
        }
    }

}

//creo interface de comunicacion
//    public interface Comunicacion{
//    
//        public void transferirListaPlanetas(List<Planeta> listaPlanetas);
//        
//    
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

